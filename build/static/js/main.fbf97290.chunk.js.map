{"version":3,"sources":["Sidebar.js","models.js","ApiController.js","Home.js","mapStyles.js","Education.js","Charity.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","props","active","Sidebar","predictionModel","latitude","longitude","class_id","this","ApiController","flaskUrl","AWSUrl","url","console","log","fetch","request","status","text","csvString","result","readString","header","fireLocations","data","highConfidenceFire","filter","each","Number","bright_ti4","track","version","satellite","bright_ti5","scan","frp","daynight","confidence","currentDateTime","toISOString","substr","myHeaders","Headers","append","dataBody","datetime","jsonBody","JSON","stringify","requestOptions","method","headers","body","response","json","updateSuccess","update_assets","topLeftCoordinate","bottomRightCoordinate","top_left_lat_lng","bottom_right_lat_lng","date","record","i","length","push","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","apiController","firstTime","firstTimeCurrent","currentFiresData","Home","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","React","useState","markers","setMarkers","selected","setSelected","predictions","setPredictions","setCurrentFires","onMapClick","useCallback","e","current","latLng","time","Date","mapRef","useRef","onMapLoad","map","panTo","setZoom","getPredictionAPI","then","object","latlng","window","google","maps","LatLng","Search","Locate","id","zoom","onClick","onLoad","marker","key","position","prediction","icon","origin","Point","anchor","scaledSize","Size","onCloseClick","formatRelative","className","navigator","geolocation","getCurrentPosition","coords","src","alt","usePlacesAutocomplete","location","radius","ready","value","suggestions","setValue","clearSuggestions","handleSelect","address","a","getGeocode","results","getLatLng","onSelect","onChange","target","disabled","placeholder","description","getCurrentFireAPI","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fbf97290.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components';\r\n// import List from '@material-ui/core/List'\r\n// import ListItem from '@material-ui/core/ListItem'\r\n// import ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport SidebarItems from './SidebarItems';\r\n\r\nconst SidebarParent = styled.div`\r\n  position: absolute;\r\n  background-color: gray;\r\n  color: white;\r\n  border-radius: 10px;\r\n  margin: 10px 10px;\r\n  box-shadow: 5px 10px #d8d5d5;\r\n  left: 0;\r\n  padding: 10px 10px;\r\n  z-index: 10;\r\n  width: 10vw;\r\n  border: 1px solid rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst SidebarItem = styled.div`\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: ${props => props.active ? \"#FFFF00\" : \"\"};\r\n  transition: all 0.25s ease-in-out;\r\n`;\r\n\r\n\r\nfunction Sidebar(props, {defaultActive}) {\r\n    \r\n    const [activeIndex, setActiveIndex] = React.useState(defaultActive || 0);\r\n\r\n    return (\r\n      <SidebarParent>\r\n        {\r\n          SidebarItems.map((item, index) => {\r\n            return (\r\n              <Link to={item.route}>\r\n                <SidebarItem key={item.name} active={index === activeIndex}>\r\n                  <p>{item.name}</p>\r\n                </SidebarItem>\r\n              </Link>\r\n            );\r\n          })\r\n        }\r\n      </SidebarParent>\r\n    );\r\n  }\r\n\r\nexport default Sidebar","export default class predictionModel {\r\n    constructor (latitude, longitude, class_id) {\r\n        this.latitude = latitude\r\n        this.longitude = longitude\r\n        this.class_id = class_id\r\n    }\r\n}\r\n\r\n  ","/*\r\nInstall Allow-CORS extension on browser\r\nhttps://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=en\r\n\r\nInstall PapaParse, if fail to build\r\nnpm install react-papaparse --save\r\n\r\n//ADD THIS IN YOUR PAGE\r\n    import ApiController from './ApiController'\r\n    let apiController = new ApiController()\r\n    \r\n    TO USE: apiController.getPredictionAPI(...)\r\n*/\r\n\r\nimport { readString } from 'react-papaparse'\r\nimport predictionModel from './models'\r\n\r\nexport default class ApiController{\r\n    constructor(){\r\n        this.flaskUrl = 'http://localhost:5000'\r\n        this.AWSUrl = 'http://3.133.101.18:80/'\r\n    }\r\n\r\n    async getCurrentFireAPI() {   \r\n        let url = 'https://firms.modaps.eosdis.nasa.gov/data/active_fire/suomi-npp-viirs-c2/csv/SUOMI_VIIRS_C2_Australia_NewZealand_7d.csv'\r\n        \r\n        console.log('HTTP Request to ' + url)\r\n        let request = await fetch(url)\r\n        console.log(request.status)\r\n\r\n        let csvString = await request.text()\r\n\r\n        var result = readString(csvString, {\r\n            header: true\r\n        })\r\n\r\n        var fireLocations = result.data\r\n        var highConfidenceFire = fireLocations.filter( function(each) {\r\n            each.latitude = Number(each.latitude)\r\n            each.longitude = Number(each.longitude)\r\n            each.bright_ti4 = Number(each.bright_ti4)\r\n            each.track = Number(each.track)\r\n            \r\n            delete each.version\r\n            delete each.satellite\r\n            delete each.bright_ti5\r\n            delete each.scan\r\n            delete each.frp\r\n            delete each.daynight\r\n            return each.confidence === 'high'\r\n        })\r\n\r\n        console.log(highConfidenceFire)\r\n        return highConfidenceFire\r\n    }\r\n\r\n    async updateAssetsAPI(currentDateTime) {\r\n        let url =  this.AWSUrl + \"update_assets\"\r\n\r\n        var dateString = currentDateTime.toISOString().substr(0,10)\r\n        dateString = \"2020-04-01\"\r\n\r\n        var myHeaders = new Headers()\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        myHeaders.append(\"Accept\", \"application/json\")\r\n\r\n        var dataBody = {\r\n            datetime: dateString\r\n        }\r\n        let jsonBody = JSON.stringify(dataBody)\r\n        console.log(jsonBody)\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: jsonBody\r\n        };\r\n\r\n        console.log('HTTP Request to ' + url)\r\n        console.log(requestOptions)\r\n        let response = await fetch(url, requestOptions)\r\n        console.log(response.status)\r\n\r\n        let data = await response.json()\r\n        let updateSuccess = (data.update_assets === 1)? true: false\r\n        return updateSuccess\r\n    }\r\n\r\n    async getPredictionAPI(topLeftCoordinate, bottomRightCoordinate, currentDateTime) {\r\n        let url = this.AWSUrl + \"predict\"\r\n\r\n        var dateString = currentDateTime.toISOString().substr(0,10)\r\n        dateString = \"2020-04-01\"\r\n\r\n        var myHeaders = new Headers()\r\n        myHeaders.append(\"Content-Type\", \"application/json\")\r\n        myHeaders.append(\"Accept\", \"application/json\")\r\n\r\n        var dataBody = {\r\n            top_left_lat_lng: topLeftCoordinate,\r\n            bottom_right_lat_lng: bottomRightCoordinate,\r\n            date: dateString\r\n        }\r\n        let jsonBody = JSON.stringify(dataBody)\r\n        console.log(jsonBody)\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: jsonBody\r\n        };\r\n\r\n        console.log('HTTP Request to ' + url)\r\n        console.log(requestOptions)\r\n        let response = await fetch(url, requestOptions)\r\n        console.log(response.status)\r\n\r\n        let data = await response.json()\r\n\r\n        var record =[]\r\n        for (var i = 0; i<data.class_id.length; i++) {\r\n            record.push(new predictionModel(data.latitude[i], data.longitude[i], data.class_id[i]))\r\n        }\r\n        console.log({record})\r\n\r\n        return record\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport \"@reach/combobox/styles.css\";\r\nimport mapStyles from \"./mapStyles\";\r\nimport ApiController from './ApiController'\r\n\r\nimport {\r\n    GoogleMap,\r\n    useLoadScript,\r\n    Marker,\r\n    InfoWindow,\r\n  } from \"@react-google-maps/api\";\r\n\r\nimport usePlacesAutocomplete, {\r\ngetGeocode,\r\ngetLatLng,\r\n} from \"use-places-autocomplete\";\r\n\r\nimport {\r\n    Combobox,\r\n    ComboboxInput,\r\n    ComboboxPopover,\r\n    ComboboxList,\r\n    ComboboxOption,\r\n} from \"@reach/combobox\";\r\n\r\nimport { formatRelative } from \"date-fns\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst mapContainerStyle = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n};\r\n\r\nconst options = {\r\n    styles: mapStyles,\r\n    disableDefaultUI: true,\r\n    zoomControl: true,\r\n  };\r\nconst center = {\r\nlat: -37.560902,\r\nlng: 143.854965,\r\n};\r\n\r\nlet apiController = new ApiController()\r\nvar firstTime = true;\r\nvar firstTimeCurrent = true;\r\nvar currentFiresData = null;\r\n\r\napiController.getCurrentFireAPI().then(\r\n  object => {\r\n    currentFiresData = object;\r\n  }\r\n)\r\n\r\nexport default function Home() {\r\n    \r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n        libraries,\r\n      });\r\n\r\n    const [markers, setMarkers] = React.useState([]);\r\n    const [selected, setSelected] = React.useState(null);\r\n    const [predictions, setPredictions] = React.useState([]);\r\n    const [currentFires, setCurrentFires] = React.useState([]);\r\n\r\n    const onMapClick = React.useCallback((e) => {\r\n        setMarkers((current) => [\r\n            ...current,\r\n            {\r\n            lat: e.latLng.lat(),\r\n            lng: e.latLng.lng(),\r\n            time: new Date(),\r\n            },\r\n        ]);\r\n      }, []);\r\n    \r\n      const mapRef = React.useRef();\r\n          const onMapLoad = React.useCallback((map) => {\r\n          mapRef.current = map;\r\n      }, []);\r\n    \r\n      const panTo = React.useCallback(({ lat, lng }) => {\r\n          mapRef.current.panTo({ lat, lng });\r\n          mapRef.current.setZoom(14);\r\n      }, []);\r\n    \r\n    if (loadError) return \"Error\";\r\n    if (!isLoaded) return \"Loading...\";\r\n    \r\n    if (markers.length === 2 && firstTime) {\r\n      var topLeftCoor = [-17,130] // [markers[0].lat, markers[0].lng];\r\n      var bottomRightCoor = [-25,150] // [markers[1].lat, markers[1].lng];  \r\n      firstTime = false;\r\n\r\n      apiController.getPredictionAPI(topLeftCoor , bottomRightCoor, new Date()).then(\r\n        object => {\r\n          for (var i = 0; i < object.length; i++) {\r\n            var latlng = new window.google.maps.LatLng(object[i].latitude, object[i].longitude); \r\n            setPredictions((current) => [\r\n              ...current,\r\n              {\r\n              lat: latlng.lat(),\r\n              lng: latlng.lng(),\r\n              },\r\n            ]);\r\n          }\r\n        }\r\n      )\r\n    }\r\n\r\n    if (currentFiresData != null && firstTimeCurrent){\r\n      firstTimeCurrent = false;\r\n      for (var i = 0; i < currentFiresData.length; i++) {\r\n        var latlng = new window.google.maps.LatLng(currentFiresData[i].latitude, currentFiresData[i].longitude); \r\n        setCurrentFires((current) => [\r\n          ...current,\r\n          {\r\n          lat: latlng.lat(),\r\n          lng: latlng.lng(),\r\n          },\r\n        ]);\r\n      }\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n        <Search panTo={panTo} />\r\n        <Locate panTo={panTo} />\r\n  \r\n        <GoogleMap\r\n          id=\"map\"\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={8}\r\n          center={center}\r\n          options={options}\r\n          onClick={onMapClick}\r\n          onLoad={onMapLoad}\r\n        >\r\n          {markers.map((marker) => (\r\n            <Marker\r\n              key={`${marker.lat}-${marker.lng}`}\r\n              position={{ lat: marker.lat, lng: marker.lng, time: marker.time }}\r\n              onClick={() => {\r\n                setSelected(marker);\r\n              }}\r\n\r\n            />\r\n          ))}\r\n\r\n          {predictions.map((prediction) => (\r\n              <Marker\r\n              key={`${new Date()}+${prediction.lat}-${prediction.lng}`}\r\n              position={{ lat: prediction.lat, lng: prediction.lng }}\r\n              icon={{\r\n                url: `fire.svg`,\r\n                origin: new window.google.maps.Point(0, 0),\r\n                anchor: new window.google.maps.Point(15, 15),\r\n                scaledSize: new window.google.maps.Size(30, 30),\r\n              }}\r\n            />\r\n          ))}\r\n{/* \r\n          {currentFires.map((currentFire) => (\r\n              <Marker\r\n              key={`${new Date()}+${currentFire.lat}-${currentFire.lng}`}\r\n              position={{ lat: currentFire.lat, lng: currentFire.lng }}\r\n              icon={{\r\n                url: `fire.svg`,\r\n                origin: new window.google.maps.Point(0, 0),\r\n                anchor: new window.google.maps.Point(15, 15),\r\n                scaledSize: new window.google.maps.Size(30, 30),\r\n              }}\r\n            />\r\n          ))} */}\r\n  \r\n          {selected ? (\r\n            <InfoWindow\r\n              position={{ lat: selected.lat, lng: selected.lng }}\r\n              onCloseClick={() => {\r\n                setSelected(null);\r\n              }}\r\n            >\r\n              <div>\r\n                <h2>\r\n                  Fire spotted !\r\n                </h2>\r\n                <p>Spotted {formatRelative(selected.time, new Date())}</p>\r\n              </div>\r\n            </InfoWindow>\r\n          ) : null}\r\n        \r\n        </GoogleMap>\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction Locate({panTo}) {\r\n    return (\r\n      <button\r\n        className=\"locate\" \r\n        onClick={() => {\r\n          navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n              panTo({\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude,\r\n              });\r\n            },\r\n          () => null\r\n          );\r\n        }}>\r\n        <img src='/locate_me.png' alt=\"compass - locate me\"/>\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  function Search({ panTo }) {\r\n    const {\r\n      ready,\r\n      value,\r\n      suggestions: { status, data },\r\n      setValue,\r\n      clearSuggestions,\r\n    } = usePlacesAutocomplete({\r\n      requestOptions: {\r\n        location: { lat: () => -37.560902, lng: () => 143.854965 },\r\n        radius: 100 * 1000,\r\n      },\r\n    });\r\n  \r\n    const handleInput = (e) => {\r\n      setValue(e.target.value);\r\n    };\r\n  \r\n    const handleSelect = async (address) => {\r\n      setValue(address, false);\r\n      clearSuggestions();\r\n  \r\n      try {\r\n        const results = await getGeocode({ address });\r\n        const { lat, lng } = await getLatLng(results[0]);\r\n        panTo({ lat, lng });\r\n      } catch (error) {\r\n        console.log(\"😱 Error: \", error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"search\">\r\n        <Combobox onSelect={handleSelect}>\r\n          <ComboboxInput\r\n            value={value}\r\n            onChange={handleInput}\r\n            disabled={!ready}\r\n            placeholder=\"Search your location\"\r\n          />\r\n          <ComboboxPopover>\r\n            <ComboboxList>\r\n              {status === \"OK\" &&\r\n                data.map(({ id, description }) => (\r\n                  <ComboboxOption key={id} value={description} />\r\n                ))}\r\n            </ComboboxList>\r\n          </ComboboxPopover>\r\n        </Combobox>\r\n      </div>\r\n    );\r\n  }","export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LeftMargin = styled.div`\r\n   margin-left: 15vw;\r\n`;\r\n\r\nconst Education = () => {\r\n    return (\r\n       <LeftMargin>\r\n          <div>\r\n            <h1>Education</h1>\r\n            <p>This page is about Education</p>\r\n         </div>\r\n       </LeftMargin>\r\n       \r\n    );\r\n}\r\n \r\nexport default Education;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LeftMargin = styled.div`\r\nmargin-left: 15vw;\r\n`;\r\n\r\nconst Charity = () => {\r\n    return (\r\n      <LeftMargin>\r\n         <div>\r\n            <h1>Charity</h1>\r\n            <p>This page is about Charity</p>\r\n         </div>\r\n      </LeftMargin>\r\n    );\r\n}\r\n \r\nexport default Charity;","import React from \"react\";\r\n\r\nimport {\r\n  BrowserRouter, Route, Switch\r\n} from 'react-router-dom';\r\n\r\n//sidebar.js\r\nimport Sidebar from './Sidebar';\r\n\r\nimport Home from './Home';\r\nimport Education from './Education';\r\nimport Charity from './Charity';\r\n\r\nexport default function App({props}) {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path='/' component={Home} exact/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
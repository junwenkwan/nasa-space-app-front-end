{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/nasa-space-app-front-end/src/Home.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from \"@reach/combobox\";\nimport { formatRelative } from \"date-fns\";\nimport Sidebar from './Sidebar';\nimport mapStyles from \"./mapStyles\";\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(25px, auto);\n`;\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: -37.560902,\n  lng: 143.854965\n};\nexport const Home = props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Search, {\n  panTo: panTo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Locate, {\n  panTo: panTo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Sidebar, {\n  items: items,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(GoogleMap, {\n  id: \"map\",\n  mapContainerStyle: mapContainerStyle,\n  zoom: 8,\n  center: center,\n  options: options,\n  onClick: onMapClick,\n  onLoad: onMapLoad,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }\n}, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n  key: `${marker.lat}-${marker.lng}`,\n  position: {\n    lat: marker.lat,\n    lng: marker.lng\n  },\n  onClick: () => {\n    setSelected(marker);\n  },\n  icon: {\n    url: `/logo.svg`,\n    origin: new window.google.maps.Point(0, 0),\n    anchor: new window.google.maps.Point(15, 15),\n    scaledSize: new window.google.maps.Size(30, 30)\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }\n})), selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n  position: {\n    lat: selected.lat,\n    lng: selected.lng\n  },\n  onCloseClick: () => {\n    setSelected(null);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }\n}, \"Fire spotted !\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }\n}, \"Spotted \", formatRelative(selected.time, new Date())))) : null));\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/locate_me.png\",\n    alt: \"compass - locate me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction Search({\n  panTo\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => -37.560902,\n        lng: () => 143.854965\n      },\n      radius: 100 * 1000\n    }\n  });\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      panTo({\n        lat,\n        lng\n      });\n    } catch (error) {\n      console.log(\"ðŸ˜± Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Search your location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/jason/Desktop/nasa-space-app-front-end/src/Home.js"],"names":["React","styled","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","formatRelative","Sidebar","mapStyles","GridWrapper","div","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","Home","props","panTo","items","onMapClick","onMapLoad","markers","map","marker","setSelected","url","origin","window","google","maps","Point","anchor","scaledSize","Size","selected","time","Date","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Search","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","radius","handleInput","e","target","handleSelect","address","results","error","console","log","id","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n  } from \"use-places-autocomplete\";\nimport {\nCombobox,\nComboboxInput,\nComboboxPopover,\nComboboxList,\nComboboxOption,\n} from \"@reach/combobox\";\nimport { formatRelative } from \"date-fns\";\n\nimport Sidebar from './Sidebar';\n\nimport mapStyles from \"./mapStyles\";\n\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(25px, auto);\n`;\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst center = {\n  lat: -37.560902,\n  lng: 143.854965,\n};\n\n\nexport const Home = (props) => (\n    <div>\n    <Search panTo={panTo} />\n    <Locate panTo={panTo} />\n    \n    <Sidebar items={items} />\n\n    <GoogleMap\n      id=\"map\"\n      mapContainerStyle={mapContainerStyle}\n      zoom={8}\n      center={center}\n      options={options}\n      onClick={onMapClick}\n      onLoad={onMapLoad}\n    >\n      {markers.map((marker) => (\n        <Marker\n          key={`${marker.lat}-${marker.lng}`}\n          position={{ lat: marker.lat, lng: marker.lng }}\n          onClick={() => {\n            setSelected(marker);\n          }}\n          icon={{\n            url: `/logo.svg`,\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(15, 15),\n            scaledSize: new window.google.maps.Size(30, 30),\n          }}\n        />\n      ))}\n\n      {selected ? (\n        <InfoWindow\n          position={{ lat: selected.lat, lng: selected.lng }}\n          onCloseClick={() => {\n            setSelected(null);\n          }}\n        >\n          <div>\n            <h2>\n              Fire spotted !\n            </h2>\n            <p>Spotted {formatRelative(selected.time, new Date())}</p>\n          </div>\n        </InfoWindow>\n      ) : null}\n    </GoogleMap>\n  </div>\n)\n\nfunction Locate({panTo}) {\n    return (\n      <button\n        className=\"locate\" \n        onClick={() => {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              panTo({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n              });\n            },\n          () => null\n          );\n        }}>\n        <img src='/locate_me.png' alt=\"compass - locate me\"/>\n      </button>\n    );\n  }\n  \n  function Search({ panTo }) {\n    const {\n      ready,\n      value,\n      suggestions: { status, data },\n      setValue,\n      clearSuggestions,\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: { lat: () => -37.560902, lng: () => 143.854965 },\n        radius: 100 * 1000,\n      },\n    });\n  \n    const handleInput = (e) => {\n      setValue(e.target.value);\n    };\n  \n    const handleSelect = async (address) => {\n      setValue(address, false);\n      clearSuggestions();\n  \n      try {\n        const results = await getGeocode({ address });\n        const { lat, lng } = await getLatLng(results[0]);\n        panTo({ lat, lng });\n      } catch (error) {\n        console.log(\"ðŸ˜± Error: \", error);\n      }\n    };\n  \n    return (\n      <div className=\"search\">\n        <Combobox onSelect={handleSelect}>\n          <ComboboxInput\n            value={value}\n            onChange={handleInput}\n            disabled={!ready}\n            placeholder=\"Search your location\"\n          />\n          <ComboboxPopover>\n            <ComboboxList>\n              {status === \"OK\" &&\n                data.map(({ id, description }) => (\n                  <ComboboxOption key={id} value={description} />\n                ))}\n            </ComboboxList>\n          </ComboboxPopover>\n        </Combobox>\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}
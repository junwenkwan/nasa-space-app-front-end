{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/nasa-space-app-front-end/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; //sidebar.js\n\nimport Sidebar from './Sidebar';\nimport Home from './Home';\nexport default function App() {\n  const items = [{\n    name: 'Map',\n    label: 'Map'\n  }, {\n    name: 'Education',\n    label: 'Education'\n  }, {\n    name: 'Charity',\n    label: 'Charity'\n  }];\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/locate_me.png\",\n    alt: \"compass - locate me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Search({\n  panTo\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => -37.560902,\n        lng: () => 143.854965\n      },\n      radius: 100 * 1000\n    }\n  });\n\n  const handleInput = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async address => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      panTo({\n        lat,\n        lng\n      });\n    } catch (error) {\n      console.log(\"ðŸ˜± Error: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: handleInput,\n    disabled: !ready,\n    placeholder: \"Search your location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/jason/Desktop/nasa-space-app-front-end/src/App.js"],"names":["React","BrowserRouter","Route","Switch","Sidebar","Home","App","items","name","label","Locate","panTo","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","Search","ready","value","suggestions","status","data","setValue","clearSuggestions","usePlacesAutocomplete","requestOptions","location","radius","handleInput","e","target","handleSelect","address","results","getGeocode","getLatLng","error","console","log","map","id","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,aADF,EACiBC,KADjB,EACwBC,MADxB,QAEO,kBAFP,C,CAIA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAMC,KAAK,GAAG,CACV;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GADU,EAEV;AAAED,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAFU,EAGV;AAAED,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAHU,CAAd;AAKA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEF,IAA3B;AAAiC,IAAA,KAAK,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD;;AAED,SAASK,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAyB;AACvB,sBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;AACZJ,QAAAA,KAAK,CAAC;AACJK,UAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBC,QADjB;AAEJC,UAAAA,GAAG,EAAEJ,QAAQ,CAACE,MAAT,CAAgBG;AAFjB,SAAD,CAAL;AAID,OANH,EAOA,MAAM,IAPN;AASD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE;AAAK,IAAA,GAAG,EAAC,gBAAT;AAA0B,IAAA,GAAG,EAAC,qBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;;AAED,SAASC,MAAT,CAAgB;AAAEV,EAAAA;AAAF,CAAhB,EAA2B;AACzB,QAAM;AACJW,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAHT;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAMFC,qBAAqB,CAAC;AACxBC,IAAAA,cAAc,EAAE;AACdC,MAAAA,QAAQ,EAAE;AAAEf,QAAAA,GAAG,EAAE,MAAM,CAAC,SAAd;AAAyBG,QAAAA,GAAG,EAAE,MAAM;AAApC,OADI;AAEda,MAAAA,MAAM,EAAE,MAAM;AAFA;AADQ,GAAD,CANzB;;AAaA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMa,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtCV,IAAAA,QAAQ,CAACU,OAAD,EAAU,KAAV,CAAR;AACAT,IAAAA,gBAAgB;;AAEhB,QAAI;AACF,YAAMU,OAAO,GAAG,MAAMC,UAAU,CAAC;AAAEF,QAAAA;AAAF,OAAD,CAAhC;AACA,YAAM;AAAErB,QAAAA,GAAF;AAAOG,QAAAA;AAAP,UAAe,MAAMqB,SAAS,CAACF,OAAO,CAAC,CAAD,CAAR,CAApC;AACA3B,MAAAA,KAAK,CAAC;AAAEK,QAAAA,GAAF;AAAOG,QAAAA;AAAP,OAAD,CAAL;AACD,KAJD,CAIE,OAAOsB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEL,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEb,KADT;AAEE,IAAA,QAAQ,EAAEU,WAFZ;AAGE,IAAA,QAAQ,EAAE,CAACX,KAHb;AAIE,IAAA,WAAW,EAAC,sBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,KAAK,IAAX,IACCC,IAAI,CAACkB,GAAL,CAAS,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,kBACP,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAED,EAArB;AAAyB,IAAA,KAAK,EAAEC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,CAPF,CADF,CADF;AAoBD","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n  BrowserRouter, Route, Switch\r\n} from 'react-router-dom';\r\n\r\n//sidebar.js\r\nimport Sidebar from './Sidebar';\r\n\r\nimport Home from './Home';\r\n\r\nexport default function App() {\r\n  const items = [\r\n      { name: 'Map', label: 'Map' },\r\n      { name: 'Education', label: 'Education' },\r\n      { name: 'Charity', label: 'Charity' },\r\n]\r\n  return (\r\n    <BrowserRouter>\r\n      <Sidebar items={items} />\r\n      <Switch>\r\n        <Route path='/' component={Home} exact/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction Locate({panTo}) {\r\n  return (\r\n    <button\r\n      className=\"locate\" \r\n      onClick={() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            panTo({\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude,\r\n            });\r\n          },\r\n        () => null\r\n        );\r\n      }}>\r\n      <img src='/locate_me.png' alt=\"compass - locate me\"/>\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Search({ panTo }) {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => -37.560902, lng: () => 143.854965 },\r\n      radius: 100 * 1000,\r\n    },\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      panTo({ lat, lng });\r\n    } catch (error) {\r\n      console.log(\"ðŸ˜± Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Combobox onSelect={handleSelect}>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          placeholder=\"Search your location\"\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khoo\\\\Desktop\\\\Nasa Space App Challenge\\\\nasa-space-app-2020\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport mapStyles from './mapStyles';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow, MarkerClusterer } from \"@react-google-maps/api\";\nimport { formatRelative } from \"date-fns\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 43.6,\n  lng: -79\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nfunction App() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const onMapClick = React.useCallback(event => {\n    setMarkers(current => [...current, {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options,\n    onClick: onMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n    key: marker.time.toISOString(),\n    position: {\n      lat: marker.lat,\n      lng: marker.lng\n    },\n    icon: {\n      url: \"/logo.svg\",\n      scaledSize: new window.google.maps.Size(30, 30),\n      origin: new window.google.maps.Point(0, 0),\n      anchor: new window.google.maps.Point(15, 15)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/khoo/Desktop/Nasa Space App Challenge/nasa-space-app-2020/my-app/src/App.js"],"names":["React","mapStyles","GoogleMap","useLoadScript","Marker","InfoWindow","MarkerClusterer","formatRelative","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","App","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","markers","setMarkers","useState","onMapClick","useCallback","event","current","latLng","time","Date","map","marker","toISOString","url","scaledSize","window","google","maps","Size","origin","Point","anchor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,EAIcC,eAJd,QAKQ,wBALR;AAOA,SAASC,cAAT,QAA+B,UAA/B;AAEA,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AACA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B;AAIA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,IADQ;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;AAIA,MAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEf,SADM;AAEdgB,EAAAA,gBAAgB,EAAE,IAFJ;AAGdC,EAAAA,WAAW,EAAE;AAHC,CAAhB;;AAMA,SAASC,GAAT,GAAe;AACb,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBlB,aAAa,CAAC;AAC1CmB,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADY;AAE1CjB,IAAAA;AAF0C,GAAD,CAA3C;AAKA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwB3B,KAAK,CAAC4B,QAAN,CAAe,EAAf,CAA9B;AAEA,QAAMC,UAAU,GAAG7B,KAAK,CAAC8B,WAAN,CAAmBC,KAAD,IAAW;AAC9CJ,IAAAA,UAAU,CAAEK,OAAD,IAAa,CACtB,GAAGA,OADmB,EAEtB;AACEnB,MAAAA,GAAG,EAAEkB,KAAK,CAACE,MAAN,CAAapB,GAAb,EADP;AAEEC,MAAAA,GAAG,EAAEiB,KAAK,CAACE,MAAN,CAAanB,GAAb,EAFP;AAGEoB,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHR,KAFsB,CAAd,CAAV;AAQD,GATkB,EAShB,EATgB,CAAnB;AAWA,MAAId,SAAJ,EAAe,OAAO,oBAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,cAAP;AAEf,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAEX,iBADrB;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,MAAM,EAAEG,MAHV;AAIE,IAAA,OAAO,EAAEG,OAJX;AAKE,IAAA,OAAO,EAAEc,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGH,OAAO,CAACU,GAAR,CAAaC,MAAD,iBACX,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACH,IAAP,CAAYI,WAAZ,EADP;AAEE,IAAA,QAAQ,EAAE;AAACzB,MAAAA,GAAG,EAAEwB,MAAM,CAACxB,GAAb;AAAkBC,MAAAA,GAAG,EAAEuB,MAAM,CAACvB;AAA9B,KAFZ;AAGE,IAAA,IAAI,EAAE;AACJyB,MAAAA,GAAG,EAAE,WADD;AAEJC,MAAAA,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC,CAFR;AAGJC,MAAAA,MAAM,EAAE,IAAIJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAHJ;AAIJC,MAAAA,MAAM,EAAE,IAAIN,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBG,KAAvB,CAA6B,EAA7B,EAAiC,EAAjC;AAJJ,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,CADF,CADF;AAwBD;;AAED,eAAe3B,GAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport mapStyles from './mapStyles'\r\nimport { \r\n  GoogleMap, \r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow, MarkerClusterer\r\n } from \"@react-google-maps/api\"\r\n\r\nimport { formatRelative } from \"date-fns\"\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n}\r\nconst center = {\r\n  lat: 43.6,\r\n  lng: -79,\r\n}\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n}\r\n\r\nfunction App() {\r\n  const {isLoaded, loadError} = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [markers, setMarkers] = React.useState([]);\r\n\r\n  const onMapClick = React.useCallback((event) => {\r\n    setMarkers((current) => [\r\n      ...current, \r\n      {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ])\r\n  }, []);\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap \r\n        mapContainerStyle={mapContainerStyle} \r\n        zoom={8} \r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker \r\n            key={marker.time.toISOString()}\r\n            position={{lat: marker.lat, lng: marker.lng}}\r\n            icon={{\r\n              url: \"/logo.svg\",\r\n              scaledSize: new window.google.maps.Size(30, 30),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(15, 15),\r\n            }}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
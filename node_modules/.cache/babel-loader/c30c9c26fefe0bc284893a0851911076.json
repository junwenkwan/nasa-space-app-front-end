{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\khoo\\\\Desktop\\\\Nasa Space App Challenge\\\\nasa-space-app-2020\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\khoo\\\\Desktop\\\\Nasa Space App Challenge\\\\nasa-space-app-2020\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import'./App.css';import mapStyles from'./mapStyles';import{GoogleMap,useLoadScript,Marker,InfoWindow,MarkerClusterer}from\"@react-google-maps/api\";import{formatRelative}from\"date-fns\";import usePlacesAutocomplete,{getGeocode,getLatLng}from\"use-places-autocomplete\";import{Combobox,ComboboxInput,ComboboxPopover,ComboboxList,ComboboxOption}from\"@reach/combobox\";// import \"@reach/combobox/style.css\";\nvar libraries=[\"places\"];var mapContainerStyle={width:'100vw',height:'100vh'};var center={lat:43.6,lng:-79};var options={styles:mapStyles,disableDefaultUI:true,zoomControl:true};function App(){var _useLoadScript=useLoadScript({googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY,libraries:libraries}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),markers=_React$useState2[0],setMarkers=_React$useState2[1];var _React$useState3=React.useState(null),_React$useState4=_slicedToArray(_React$useState3,2),selected=_React$useState4[0],setSelected=_React$useState4[1];var onMapClick=React.useCallback(function(event){setMarkers(function(current){return[].concat(_toConsumableArray(current),[{lat:event.latLng.lat(),lng:event.latLng.lng(),time:new Date()}]);});},[]);var mapRef=React.useRef();var onMapLoad=React.useCallback(function(map){mapRef.current=map;},[]);if(loadError)return\"Error loading maps\";if(!isLoaded)return\"Loading maps\";return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Search,null),/*#__PURE__*/React.createElement(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:8,center:center,options:options,onClick:onMapClick,onLoad:onMapLoad},markers.map(function(marker){return/*#__PURE__*/React.createElement(Marker,{key:marker.time.toISOString(),position:{lat:marker.lat,lng:marker.lng},icon:{url:\"/logo.svg\",scaledSize:new window.google.maps.Size(30,30),origin:new window.google.maps.Point(0,0),anchor:new window.google.maps.Point(15,15)},onClick:function onClick(){setSelected(marker);}});}),selected?/*#__PURE__*/React.createElement(InfoWindow,{position:{lat:selected.lat,lng:selected.lng},onCloseClick:function onCloseClick(){setSelected(null);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Fire spotted!\"),/*#__PURE__*/React.createElement(\"p\",null,\"Spotted \",formatRelative(selected.time,new Date())))):null));}export default App;function Search(){var _usePlacesAutocomplet=usePlacesAutocomplete({requestOptions:{location:{lat:function lat(){return 43.6;},lng:function lng(){return-79;}},radius:200*1000}}),ready=_usePlacesAutocomplet.ready,value=_usePlacesAutocomplet.value,_usePlacesAutocomplet2=_usePlacesAutocomplet.suggestions,status=_usePlacesAutocomplet2.status,data=_usePlacesAutocomplet2.data,setValue=_usePlacesAutocomplet.setValue,clearSuggestion=_usePlacesAutocomplet.clearSuggestion;return/*#__PURE__*/React.createElement(Combobox,{onSelect:function onSelect(address){alert(address);}},/*#__PURE__*/React.createElement(ComboboxInput,{value:value,onChange:function onChange(e){setValue(e.target.value);},disabled:!ready,placeholder:\"Enter an address\"}));}","map":{"version":3,"sources":["C:/Users/khoo/Desktop/Nasa Space App Challenge/nasa-space-app-2020/my-app/src/App.js"],"names":["React","mapStyles","GoogleMap","useLoadScript","Marker","InfoWindow","MarkerClusterer","formatRelative","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxPopover","ComboboxList","ComboboxOption","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","disableDefaultUI","zoomControl","App","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","isLoaded","loadError","useState","markers","setMarkers","selected","setSelected","onMapClick","useCallback","event","current","latLng","time","Date","mapRef","useRef","onMapLoad","map","marker","toISOString","url","scaledSize","window","google","maps","Size","origin","Point","anchor","Search","requestOptions","location","radius","ready","value","suggestions","status","data","setValue","clearSuggestion","address","alert","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport mapStyles from './mapStyles'\r\nimport { \r\n  GoogleMap, \r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow, MarkerClusterer\r\n} from \"@react-google-maps/api\";\r\n\r\nimport { formatRelative } from \"date-fns\";\r\n\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng\r\n} from \"use-places-autocomplete\";\r\n\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\n\r\n// import \"@reach/combobox/style.css\";\r\n\r\n\r\nconst libraries = [\"places\"]\r\nconst mapContainerStyle = {\r\n  width: '100vw',\r\n  height: '100vh',\r\n}\r\nconst center = {\r\n  lat: 43.6,\r\n  lng: -79,\r\n}\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n}\r\n\r\nfunction App() {\r\n  const {isLoaded, loadError} = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries,\r\n  });\r\n\r\n  const [markers, setMarkers] = React.useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n\r\n  const onMapClick = React.useCallback((event) => {\r\n    setMarkers((current) => [\r\n      ...current, \r\n      {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ])\r\n  }, []);\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, [])\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading maps\";\r\n\r\n  return (\r\n    <div>\r\n      <Search />\r\n\r\n      <GoogleMap \r\n        mapContainerStyle={mapContainerStyle} \r\n        zoom={8} \r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad ={onMapLoad}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker \r\n            key={marker.time.toISOString()}\r\n            position={{lat: marker.lat, lng: marker.lng}}\r\n            icon={{\r\n              url: \"/logo.svg\",\r\n              scaledSize: new window.google.maps.Size(30, 30),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(15, 15),\r\n            }}\r\n            onClick={() => {\r\n              setSelected(marker)\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n        <InfoWindow \r\n          position={{lat: selected.lat, lng: selected.lng}} \r\n          onCloseClick={()=> {\r\n            setSelected(null);\r\n          }}\r\n        >\r\n          <div>\r\n            <h2>Fire spotted!</h2>\r\n            <p>Spotted {formatRelative(selected.time, new Date())}</p>\r\n          </div>\r\n        </InfoWindow>) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction Search() {\r\n  const {\r\n    ready, \r\n    value, \r\n    suggestions: {status, data}, \r\n    setValue, \r\n    clearSuggestion\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: {lat: () => 43.6, lng: () => -79},\r\n      radius: 200 * 1000,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Combobox \r\n      onSelect={(address) => {\r\n        alert(address)\r\n      }}\r\n    >\r\n      <ComboboxInput \r\n        value={value} \r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n        }}\r\n        disabled={!ready}\r\n        placeholder = \"Enter an address\"\r\n      />\r\n    </Combobox>)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
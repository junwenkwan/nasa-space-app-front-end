{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/nasa-space-app-front-end/src/Home.js\";\nimport React from 'react';\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from \"./mapStyles\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: -37.560902,\n  lng: 143.854965\n};\nexport default function Home() {\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const onMapClick = React.useCallback(e => {\n    console.log(e.latLng.lat());\n    console.log(e.latLng.lng()); // fetch('http://3.133.101.18/predict', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json',\n    //   },\n    //   body: JSON.stringify({\n    //     latitude: e.latLng.lat(),\n    //     longitude: e.latLng.lng(),\n    //   })\n    // })\n    // probably where the POST API will be which then will setState GoogleMap InfoWindow below\n\n    setMarkers(current => [...current, {\n      lat: e.latLng.lat(),\n      lng: e.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const panTo = React.useCallback(({\n    lat,\n    lng\n  }) => {\n    mapRef.current.panTo({\n      lat,\n      lng\n    });\n    mapRef.current.setZoom(14);\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    id: \"map\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 8,\n    center: center,\n    options: options // onClick={onMapClick}\n    // onLoad={onMapLoad}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/jason/Desktop/nasa-space-app-front-end/src/Home.js"],"names":["React","mapStyles","GoogleMap","useLoadScript","Marker","InfoWindow","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","Home","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","markers","setMarkers","useState","selected","setSelected","onMapClick","useCallback","e","console","log","latLng","current","time","Date","mapRef","useRef","onMapLoad","map","panTo","setZoom"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from \"./mapStyles\";\n\nimport {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    InfoWindow,\n  } from \"@react-google-maps/api\";\n\nconst libraries = [\"places\"];\n\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\",\n};\n\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true,\n    zoomControl: true,\n  };\nconst center = {\nlat: -37.560902,\nlng: 143.854965,\n};\n\nexport default function Home() {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n      });\n\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState(null);\n\n    const onMapClick = React.useCallback((e) => {\n        console.log(e.latLng.lat());\n        console.log(e.latLng.lng());\n        // fetch('http://3.133.101.18/predict', {\n        //   method: 'POST',\n        //   headers: {\n        //     'Accept': 'application/json',\n        //     'Content-Type': 'application/json',\n        //   },\n        //   body: JSON.stringify({\n        //     latitude: e.latLng.lat(),\n        //     longitude: e.latLng.lng(),\n        //   })\n        // })\n        // probably where the POST API will be which then will setState GoogleMap InfoWindow below\n    \n        setMarkers((current) => [\n            ...current,\n            {\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng(),\n            time: new Date(),\n            },\n        ]);\n      }, []);\n    \n      const mapRef = React.useRef();\n          const onMapLoad = React.useCallback((map) => {\n          mapRef.current = map;\n      }, []);\n    \n      const panTo = React.useCallback(({ lat, lng }) => {\n          mapRef.current.panTo({ lat, lng });\n          mapRef.current.setZoom(14);\n      }, []);\n    \n    if (loadError) return \"Error\";\n    if (!isLoaded) return \"Loading...\";\n\n    return (\n        <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={8}\n        center={center}\n        options={options}\n        // onClick={onMapClick}\n        // onLoad={onMapLoad}\n        ></GoogleMap>\n    )\n}"]},"metadata":{},"sourceType":"module"}
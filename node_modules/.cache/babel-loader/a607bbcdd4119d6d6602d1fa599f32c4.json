{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/nasa-space-app-front-end/src/Home.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(25px, auto);\n`;\nexport const Home = props => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Search, {\n  panTo: panTo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Locate, {\n  panTo: panTo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Sidebar, {\n  items: items,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(GoogleMap, {\n  id: \"map\",\n  mapContainerStyle: mapContainerStyle,\n  zoom: 8,\n  center: center,\n  options: options,\n  onClick: onMapClick,\n  onLoad: onMapLoad,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n  key: `${marker.lat}-${marker.lng}`,\n  position: {\n    lat: marker.lat,\n    lng: marker.lng\n  },\n  onClick: () => {\n    setSelected(marker);\n  },\n  icon: {\n    url: `/logo.svg`,\n    origin: new window.google.maps.Point(0, 0),\n    anchor: new window.google.maps.Point(15, 15),\n    scaledSize: new window.google.maps.Size(30, 30)\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n})), selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n  position: {\n    lat: selected.lat,\n    lng: selected.lng\n  },\n  onCloseClick: () => {\n    setSelected(null);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }\n}, \"Fire spotted !\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }\n}, \"Spotted \", formatRelative(selected.time, new Date())))) : null));","map":{"version":3,"sources":["/Users/jason/Desktop/nasa-space-app-front-end/src/Home.js"],"names":["React","styled","GridWrapper","div","Home","props","panTo","items","mapContainerStyle","center","options","onMapClick","onMapLoad","markers","map","marker","lat","lng","setSelected","url","origin","window","google","maps","Point","anchor","scaledSize","Size","selected","formatRelative","time","Date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;;;;;;;;CAA/B;AASA,OAAO,MAAMC,IAAI,GAAIC,KAAD,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAEC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,eAEA,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,eAIA,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAEC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJA,eAMA,oBAAC,SAAD;AACE,EAAA,EAAE,EAAC,KADL;AAEE,EAAA,iBAAiB,EAAEC,iBAFrB;AAGE,EAAA,IAAI,EAAE,CAHR;AAIE,EAAA,MAAM,EAAEC,MAJV;AAKE,EAAA,OAAO,EAAEC,OALX;AAME,EAAA,OAAO,EAAEC,UANX;AAOE,EAAA,MAAM,EAAEC,SAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASGC,OAAO,CAACC,GAAR,CAAaC,MAAD,iBACX,oBAAC,MAAD;AACE,EAAA,GAAG,EAAG,GAAEA,MAAM,CAACC,GAAI,IAAGD,MAAM,CAACE,GAAI,EADnC;AAEE,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAED,MAAM,CAACC,GAAd;AAAmBC,IAAAA,GAAG,EAAEF,MAAM,CAACE;AAA/B,GAFZ;AAGE,EAAA,OAAO,EAAE,MAAM;AACbC,IAAAA,WAAW,CAACH,MAAD,CAAX;AACD,GALH;AAME,EAAA,IAAI,EAAE;AACJI,IAAAA,GAAG,EAAG,WADF;AAEJC,IAAAA,MAAM,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,CAFJ;AAGJC,IAAAA,MAAM,EAAE,IAAIJ,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,KAAvB,CAA6B,EAA7B,EAAiC,EAAjC,CAHJ;AAIJE,IAAAA,UAAU,EAAE,IAAIL,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBI,IAAvB,CAA4B,EAA5B,EAAgC,EAAhC;AAJR,GANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CATH,EAyBGC,QAAQ,gBACP,oBAAC,UAAD;AACE,EAAA,QAAQ,EAAE;AAAEZ,IAAAA,GAAG,EAAEY,QAAQ,CAACZ,GAAhB;AAAqBC,IAAAA,GAAG,EAAEW,QAAQ,CAACX;AAAnC,GADZ;AAEE,EAAA,YAAY,EAAE,MAAM;AAClBC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYW,cAAc,CAACD,QAAQ,CAACE,IAAV,EAAgB,IAAIC,IAAJ,EAAhB,CAA1B,CAJF,CANF,CADO,GAcL,IAvCN,CANA,CADG","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nconst GridWrapper = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n  grid-template-columns: repeat(12, 1fr);\n  grid-auto-rows: minmax(25px, auto);\n`;\nexport const Home = (props) => (\n    <div>\n    <Search panTo={panTo} />\n    <Locate panTo={panTo} />\n    \n    <Sidebar items={items} />\n\n    <GoogleMap\n      id=\"map\"\n      mapContainerStyle={mapContainerStyle}\n      zoom={8}\n      center={center}\n      options={options}\n      onClick={onMapClick}\n      onLoad={onMapLoad}\n    >\n      {markers.map((marker) => (\n        <Marker\n          key={`${marker.lat}-${marker.lng}`}\n          position={{ lat: marker.lat, lng: marker.lng }}\n          onClick={() => {\n            setSelected(marker);\n          }}\n          icon={{\n            url: `/logo.svg`,\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(15, 15),\n            scaledSize: new window.google.maps.Size(30, 30),\n          }}\n        />\n      ))}\n\n      {selected ? (\n        <InfoWindow\n          position={{ lat: selected.lat, lng: selected.lng }}\n          onCloseClick={() => {\n            setSelected(null);\n          }}\n        >\n          <div>\n            <h2>\n              Fire spotted !\n            </h2>\n            <p>Spotted {formatRelative(selected.time, new Date())}</p>\n          </div>\n        </InfoWindow>\n      ) : null}\n    </GoogleMap>\n  </div>\n)"]},"metadata":{},"sourceType":"module"}